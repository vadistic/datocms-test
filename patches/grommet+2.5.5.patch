diff --git a/node_modules/grommet/utils/index.d.ts b/node_modules/grommet/utils/index.d.ts
index 8f3bf1c..52c351f 100644
--- a/node_modules/grommet/utils/index.d.ts
+++ b/node_modules/grommet/utils/index.d.ts
@@ -1,27 +1,29 @@
 // colors.js
-declare const normalizeColor: (color: string, theme: object, required?: boolean) => string;
+declare const normalizeColor: (
+  color: string | { light?: string; dark?: string },
+  theme: object,
+  required?: boolean,
+) => string
 
-export {normalizeColor}
+export { normalizeColor }
 // object.js
 export type DeepReadonly<T extends object> = {
-  readonly [K in keyof T]: T[K] extends object ? DeepReadonly<T[K]> : T[K];
-}
-export type NonUndefined<T> = T extends undefined ? never: T;
-export type NonUndefinedProps<T extends object> = {
-  [K in keyof T]?: NonUndefined<T[K]>;
+  readonly [K in keyof T]: T[K] extends object ? DeepReadonly<T[K]> : T[K]
 }
+export type NonUndefined<T> = T extends undefined ? never : T
+export type NonUndefinedProps<T extends object> = { [K in keyof T]?: NonUndefined<T[K]> }
 
-export type DeepFreeze = <T extends object>(obj: T) => DeepReadonly<T>;
+export type DeepFreeze = <T extends object>(obj: T) => DeepReadonly<T>
 
 // overload because generic variadic solution has messy result and all/most mergings are binary
 export interface DeepMerge {
-  <T extends object, S extends object>(target: T, source: S): T & S;
-  <T extends object, S extends object[]>(target: T, ...sources: S): T & S[number];
+  <T extends object, S extends object>(target: T, source: S): T & S
+  <T extends object, S extends object[]>(target: T, ...sources: S): T & S[number]
 }
 
-declare const isObject: (item:any) => boolean;
-declare const deepFreeze: DeepFreeze;
-declare const deepMerge: DeepMerge;
-declare const removeUndefined: <T extends object>(obj: T) => NonUndefinedProps<T>;
+declare const isObject: (item: any) => boolean
+declare const deepFreeze: DeepFreeze
+declare const deepMerge: DeepMerge
+declare const removeUndefined: <T extends object>(obj: T) => NonUndefinedProps<T>
 
-export {isObject, deepFreeze, deepMerge, removeUndefined};
+export { isObject, deepFreeze, deepMerge, removeUndefined }
